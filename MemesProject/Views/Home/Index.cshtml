@model  PagedList.IPagedList<MemesProject.Models.MemeModel>
@using MemesProject.Models
@using PagedList.Mvc;

@{
    ViewBag.Title = "Home Page";
}
<div class="col-lg-7">
    <br/>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new {page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))
</div>

@* Generator widoku *@
@if (!Model.Any())
{
    <br />
    <p>We don't have any memes yet.</p>
}
else
{
    foreach (var meme in Model)
    {
        // <---- Div do wyśrodkowania
        <div class="col-lg-3"></div>
        //Div do wyśrodkowania --->

        @* meme view *@
        <div class="jumbotron col-lg-7">
            <h2>@Html.ActionLink(meme.Title, "Details", "Meme", new { id = meme.Id }, null)</h2>
            <hr />
            <img src="@meme.ImgSource" alt="img src" class="responsive">
            <br />
            <hr />

            @* Comment and Like *@
            <div>
                @if (User.Identity.IsAuthenticated)
                {
                    @* Like container to registered User *@
                    <div class="col-lg-2 container">
                        @meme.Plus @Html.ActionLink("Like", "Like", new { id = meme.Id })
                    </div>
                }
                else
                {
                    @* Like container to unregistered User *@
                    <div class="col-lg-2 container">
                        @meme.Plus @Html.ActionLink("Like", "Register", "Account", new { id = meme.Id }, null)
                    </div>
                }

            </div>

            @* Created by and Date*@
            <div>
                <div class="col-lg-3">
                    by: <strong>@meme.CreatedBy</strong>
                </div>
                <div class="col-lg-6">

                    Added date:<strong> @Html.ValueFor(m => meme.AddedDate, "{0:dd/MM/yyyy}")</strong>
                </div>
            </div>

        </div>
    }
}
<br />


@*<---- Div do wyśrodkowania*@
<div class="col-lg-3"></div>
@*Div do wyśrodkowania --->*@


<div class="col-lg-7">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>

<style>
    .responsive {
        width: 100%;
        height: auto;
    }
</style>